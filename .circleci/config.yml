version: 2.1

orbs:
  win: circleci/windows@2.2.0

jobs:

  docs-build:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r docs/requirements.txt
      - run:
          name: Build docs
          command: cd docs/ && make html
      - persist_to_workspace:
          root: .
          paths: docs/_build/html

  build:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - attach_workspace:
          at: C:\circleci-workspace
      - run:
          name: Test attached
          command: |
            ls C:\circleci-workspace
            ls C:\circleci-workspace\docs
            ls C:\circleci-workspace\docs\_build
            Copy-Item -Path C:\circleci-workspace\docs\_build -Destination C:\tmp\_build -Recurse -Container
      - run:
          name: Download Miniconda and save in tmp
          command: |
            $client = new-object System.Net.WebClient
            $client.DownloadFile("https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe","C:\tmp\Miniconda3-latest-Windows-x86_64.exe")
      - run:
          name: Run Miniconda installer in silent mode
          command: |
            C:\tmp\Miniconda3-latest-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\Miniconda3
      - run:
          name: Update conda, install qax environment
          command: |
            conda update conda
            conda install python=3.7
            Write-Host "$env:CONDA_ROOT"
      - run:
          name: Download GitHub based dependencies
          command: |
            $client = new-object System.Net.WebClient
            $client.DownloadFile("https://github.com/ausseabed/qajson/archive/master.zip","C:\tmp\ausseabed.qajson.zip")
            $client.DownloadFile("https://github.com/ausseabed/pyall/archive/master.zip","C:\tmp\pyall.zip")
            $client.DownloadFile("https://github.com/ausseabed/pygsf/archive/master.zip","C:\tmp\pygsf.zip")
            $client.DownloadFile("https://github.com/ausseabed/mate/archive/master.zip","C:\tmp\hyo2.mate.zip")
            $client.DownloadFile("https://github.com/ausseabed/mbes-grid-checks/archive/master.zip","C:\tmp\ausseabed.mbesgc.zip")
            $client.DownloadFile("https://github.com/ausseabed/finder-grid-checks/archive/main.zip","C:\tmp\ausseabed.findergc.zip")
            $client.DownloadFile("https://github.com/hydroffice/hyo2_abc/archive/master.zip","C:\tmp\hyo2.abc.zip")
            $client.DownloadFile("https://github.com/ausseabed/kmall/archive/master.zip","C:\tmp\kmall.zip")
      - run:
          name: Activate the qax conda environment, update the version and install the package
          command: |
            $env:CIRCLE_TAG | out-file -Encoding ascii -filepath ./version.txt
            pwd
            ls
            ls docs
            Copy-Item -Path C:\tmp\_build -Destination docs\_build -Recurse -Container
            ls C:\tmp\_build
            ls C:\circleci-workspace\docs\
            ls docs
            ls docs\_build
            ls docs\_build\html
            Write-Host "$env:CONDA_ROOT"
            conda install -y -c conda-forge certifi
            conda install -y -c conda-forge --file requirements_conda.txt
            conda install -y -c conda-forge --no-deps cartopy
            conda install -y -c conda-forge --no-deps pyproj=2.6.1
            pip install click==7.1.2
            pip install coveralls
            pip install jsonschema
            pip install geojson
            pip install affine==2.3.0
            pip install psutil==5.9.0
            pip install pytest
            pip install pytest-cov
            pip install setuptools==44.*
            pip install structlog==21.1.0
            pip install C:\tmp\ausseabed.qajson.zip
            pip install C:\tmp\pyall.zip
            pip install C:\tmp\pygsf.zip
            pip install C:\tmp\hyo2.mate.zip
            pip install C:\tmp\ausseabed.mbesgc.zip
            pip install C:\tmp\ausseabed.findergc.zip
            pip install C:\tmp\kmall.zip
            pip install pypiwin32
            pip install --no-deps C:\tmp\hyo2.abc.zip
            pip install .
      - run:
          name: Install PyInstaller and use it to build qax distribution, then zip
          command: |
            pip install pyinstaller
            pyinstaller .\install\cli.spec
            ls
            ls C:\Users\circleci\project\dist
            New-Item -Path "C:\circleci-workspace\artifacts" -Name "logfiles" -ItemType "directory"
            Add-Type -assembly "system.io.compression.filesystem"
            [io.compression.zipfile]::CreateFromDirectory("C:\Users\circleci\project\dist\qax", "C:\circleci-workspace\artifacts\qax_dist_$env:CIRCLE_TAG.zip")
      - run:
          name: Download innosetup and create install directory
          command: |
            $client = new-object System.Net.WebClient
            $client.DownloadFile("https://jrsoftware.org/download.php/is.exe","C:\tmp\is.exe")
            New-Item -Path "C:\tmp" -Name "innosetup" -ItemType "directory"
      - run:
          name: Run innosetup installer in silent mode
          command: |
            C:\tmp\is.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /DIR="C:\tmp\innosetup\"
      - run:
          name: Run innosetup
          command: |
            "#define MyAppVersion `"$env:CIRCLE_TAG`"" | out-file -Encoding ascii -filepath ./install/version.txt
            ls .\install
            get-content .\install\version.txt
            C:\tmp\innosetup\ISCC.exe .\install\qax.iss
            Move-Item C:\Users\circleci\project\install\Output\* -Destination C:\circleci-workspace\artifacts
            ls C:\circleci-workspace\artifacts
      - store_artifacts:
          path: C:\circleci-workspace\artifacts\
      - persist_to_workspace:
          root: C:\circleci-workspace\
          paths: artifacts

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ~/circleci-workspace
      - run:
          name: "Publish Release to github"
          command: |
            VERSION=${CIRCLE_TAG}
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ~/circleci-workspace/artifacts/

workflows:
  version: 2
  Windows_Workflow:
    jobs:
      - docs-build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build:
          requires:
             - docs-build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-github-release:
          requires:
             - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
